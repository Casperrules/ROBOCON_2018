#include "opencv2/highgui.hpp"
#include "opencv2/imgproc.hpp"
#include <iostream>
#include <stdio.h>
#include<limits.h>
using namespace std;
using namespace cv;



float w=80;        // actual width of the ring
float f=600.98;   // foacl length of laptop cMERA 	IN 	pixels




int main()
{
	namedWindow("aaa",WINDOW_NORMAL);
	VideoCapture cap(0);
	Mat src,gray;
	vector<Vec3f> circles;
	int i=0;
	int max1=0;
	int pixel=0;

while(i<50)
{
	cap>>src;
	cvtColor(src,gray,COLOR_BGR2GRAY);
	//erode( gray,gray);
	GaussianBlur( gray, gray, Size(15, 15), 0, 0 );
	//medianBlur (gray, gray, 15);  
	HoughCircles( gray, circles, HOUGH_GRADIENT, 1, gray.rows/8,20,70, 0, 0 );

	if(circles.size()>0)
	{
	//  cout<<"object found"<<endl;
		 	// POint is predefined object
        Point center(cvRound(circles[0][0]), cvRound(circles[0][1]));
	int radius = cvRound(circles[0][2]);
	
	
	//if(max1<radius){ max1=radius;}
	max1=max1+radius;
	}
	else
	{ //cout<<"No object in place"<<endl;
        } //Input to servo motor to sweep
	i++;
	imshow("aaa",src);
	
}



         // Pixel width of the circle in realtime

	max1=max1/50;
	pixel=2*max1;
	cout<<"The distance is:"<<(f*w)/pixel<<endl;   //triangular formula to find the distance between camera and object	
	
return(0);
}

	
	
	
	
