
#include<SPI.h>
#include<Pixy.h>
#include<Servo.h>

int trigPin=9,echoPin=10; // trig to pin 9 and echo to pin 10
float tme(int pulse); // returns time taken by sound to reach the ball
bool Tz3(); // returns true if ball on the arm for Tz3
float dist;// how far the ball is, used to run the counter
float minDist,maxDist;//distance range acceptable to assume that ball for Tz3 has been transfered 






Pixy pixy;
Servo myservo1;             // Left gripper
Servo myservo2;             //Right gripper
//*  Pneumaic 1 --> m1 and m2
bool Magenta_switch=false;  //becomes true when magenta is recieved
int throwZone=0;
int n=0;

//variables and functions for zone selection and transfer

// Initialization of Pixy and servo objects
uint16_t blocks;
const byte jPulse_pin=15;
byte jPulse=0;
bool IsGolden=false;

bool throwComplete=0;
 
const byte m1=4;  
const byte m2=7;
const byte m3=2;
const byte m4=8;

int lsbPin = 12;//pin to communicate least significant bit
int msbPin = 13;//pin to communicate most significant bit
int Zone(); // function to decide which zone to go to
void Send(int n);//sends which zone is selected to the line following arduino




byte gripper_state=0;   // Gripper state where 0=open, 1=close

void setup()
{
      pixy.init();             // initiate pixy
      myservo1.attach(A0);
      myservo2.attach(A2);     
      pinMode(m1,OUTPUT);
      pinMode(m2,OUTPUT);
      pinMode(m3,OUTPUT);
      pinMode(m4,OUTPUT);
      pinMode(lsbPin,OUTPUT);
      pinMode(msbPin,OUTPUT);
      pinMode(jPulse_pin,INPUT);

      digitalWrite(m1,LOW);
      digitalWrite(m2,LOW);
      digitalWrite(m3,LOW);
      digitalWrite(m4,LOW); 
    

}

void loop()
{
 jPulse=digitalRead(jPulse_pin); 
  n=Zone();
  IsGolden=Tz3();
  
  if(n==1||n==2)
  {
    if(gripper_state==0)
     { grip(myservo2);}
                
  }
  else if(n==3)
  {
    if(gripper_state==0)
    { grip(myservo1); }
    
  }
  if(jPulse)
  {
    jPulse=0;
    if(n==1||n==2)
    {
      ungrip(myservo2);
      shoot(m3,m4);
      reload(m3,m4);
      throwComplete=1;
    }
    else if(n==3)
    {
      ungrip(myservo1);
      shoot(m1,m2);
      reload(m1,m2);
      throwComplete=1;
    }
  }
  
  
}




int Zone()
{
    blocks=pixy.getBlocks(); //gets the blocks from pixy
  //if blocks detected
  if(blocks)
  {
      //if the green ball's signature is detected
      if(pixy.blocks[0].signature == 1 && IsGolden==false)
      {
        if(Magenta_switch) // if magenta has already been given
        {
          Serial.println("Zone 2");
          return 2; // go to zone 2 with this green ball
        }
        else
      {
        Serial.println("Zone 1");
        return 1; // otherwise go to zone 1
      }
      }
      else if(pixy.blocks[0].signature == 2 && IsGolden==false) // when magenta ball is passed,
      {
        Magenta_switch=true; // make isMagenta as true and,
        Serial.println("Zone 2");
        return 2;       // select to go to zone 2
      }

      else if(IsGolden==true)
      {
        return 3;
      }
      else { return 0; }
      
  }
}


void grip(Servo x){
    x.write(180);
    delay(420);
    x.write(90);  
    gripper_state=1;
}

void ungrip(Servo x){
  x.write(0);
  delay(420);
  x.write(90);
  gripper_state=0;
} 


void shoot(const byte x,const byte y)
{
  digitalWrite(x,HIGH);
  digitalWrite(y,LOW);
 
}

void reload(const byte x,const byte y)
{
  digitalWrite(x,LOW);
  digitalWrite(y,HIGH);
 
}

void standby(const byte x, const byte y)
{
  digitalWrite(x,LOW);
  digitalWrite(y,LOW);
  
}

float tme(int pulse){
  digitalWrite(trigPin,HIGH);
  delayMicroseconds(pulse);
  digitalWrite(trigPin,LOW);
  float pTime= pulseIn(echoPin,HIGH)/2;
  return pTime;
}


bool Tz3()
{  
  dist=tme(10)/29;
  if(minDist<= dist or dist <=maxDist)// if distance is in range 
  return true;                        // return true
  return false;                       // else return false
   
}
