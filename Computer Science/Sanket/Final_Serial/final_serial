
#include "Arduino.h"
#include<Stepper.h>
#include<Servo.h>


/* Table for  Serial Communication 
 *  Sending
 *  A --> TZ1
 *  B --> TZ2
 *  C --> TZ3
 *  T --> Throw Complete Acknowledgement
 *  N --> No ball 
 *  
 *  Recieving
 *  J --> Junction Arrival Acknowledgement


*/

//*  Pneumaic 1 --> m1 and m2
//   Pneumatic 2 --> m3 and m4 
const byte m1=4;  
const byte m2=7;
const byte m3=2;
const byte m4=8;


//Stepper Module
const int stepsPerRevolution = 200;  // change this to fit the number of steps per revolution
Stepper myStepper(stepsPerRevolution, 51, 50, 43, 44);  // PINS not fixed yet
int ang=360;
int angle=map(ang,0,360,0,200);
int step_iterator;
int revLutions=3;
byte TZ1State=0;
byte TZ2State=0;




// Sharp IR module
#define sharpIR A4
float distance, volts, average = 0;
int ir_value=0;      //  1 for TZ1 or TZ2 , 2 for TZ3 , if 1 send to PI
int count=0;
int IRval0=0;
int IRval1=0;
int IRval2=0;


// RASPI Communication
const byte toPi=3;   // Recieve acknowledgement from Arduino
const byte GreenfromPi=A5;  // Green ball signal to arduino
const byte MagentafromPi=A3; // Magenta ball signal to Arduino
bool IsGreen=false;   // flag variables
bool IsMagenta=false;
bool MagentaSwitch=false;   // first occurence of magenta ball
bool IsGolden=false;
int ballVolt1=0;   // reading from PI
int ballVolt2=0;



void setup() {  

  // put your setup code here, to run once:
  Serial.begin(9600);
  Serial3.begin(9600);
  pinMode(toPi, OUTPUT);//to pi
  pinMode(GreenfromPi,INPUT);
  pinMode(MagentafromPi,INPUT);
  pinMode(m1,OUTPUT);
  pinMode(m2,OUTPUT);
  pinMode(m3,OUTPUT);
  pinMode(m4,OUTPUT);

  digitalWrite(m1,LOW);
  digitalWrite(m2,LOW);
  digitalWrite(m3,LOW);
  digitalWrite(m4,LOW);
  
}

void loop() {



  DecideZone();
  //Serial.println(average);
 
 Serial.println(ir_value);
  if(ir_value==1)
  {
    delay(1000);
    analogWrite(toPi,170);
    delay(500);
    IsGreen=false;
    IsMagenta=false;
    readPi();
    analogWrite(toPi,0);
  }
  else if(ir_value==2)
  {
    delay(1000);
    Serial3.write('C');
 //   Serial3.flush();
    IsGolden=true;
//    Serial.println('C');
  }
  
  
 
}
void readDistance(){
  
      volts = analogRead(sharpIR)*0.0048828125;
      distance = 13*pow(volts, -1);

  
}

void CalculateAvg(){
    for (int i = 0; i < 1000; i++) {
    if (count == 0)
    average = distance;
    else {
      average = (average*count + distance)/(count++);
    //  Serial.println(average);
    }
  }
    
}

void DecideZone(){

    IRval1=0;
    IRval2=0; 
    for (int i = 0; i < 80; i++) { 

    readDistance();  
    CalculateAvg();
            
    if (average > 4.5 && average < 5.9)
    {IRval1++;}
    else if (average > 6.2 && average < 7.3)
    {IRval2++;}  
    else if (average > 7.5)
    {IRval0++;}
  }
  if(IRval1>30 && IRval2<10) { ir_value=1; }
  else if (IRval2>30 && IRval1<10 ) { ir_value=2; }
  else if (IRval0>40) { ir_value=0; }
    
}

void readPi()
{
//  delay(500);
  ballVolt1=digitalRead(GreenfromPi);
  ballVolt2=digitalRead(MagentafromPi);

  
  if(ballVolt1==1 && ballVolt2==0)
  {
    IsGreen=true;
    IsMagenta=false;
  //  clockwise();
    SendZone();
  }
  else if(ballVolt1==0 && ballVolt2==1)
   { 
    IsMagenta=true;
    IsGreen=false;
    //MagentaSwitch=true;
  //  anti();
    SendZone();
    }
}


void SendZone()
{
   //   delay(1000);
      if(IsGreen && ir_value==1)
      {
        if(MagentaSwitch) // if magenta has already been given
        {
          
          Serial3.write(8);
     //     Serial.println("Magenta");
         
        }
        else
      {
          Serial3.write(7);
       //   Serial.println("Green");
      }
      }
      else if(IsMagenta && ir_value==1) // when magenta ball is passed,
      {
          MagentaSwitch=true; // make isMagenta as true and,
          Serial3.write(8);
        //  Serial.println("Magenta");
      }
      else
      {
        Serial3.write(9);
      //  Serial.println("No ball");
      }
   //   Serial3.flush();
      
}

void WaitforJunction()
{
  while(1)
  {
  if(Serial3.available())
  {
    int Jpulse=0;
    Jpulse=Serial3.read();
    Serial.println('j');
    if(Jpulse==5)
    {
      break;
    }
  }
}
}

void ShootBall()
{
 if(IsGreen==true || IsMagenta==true)
 {
  shoot(m1,m3);
  delay(1000);
  reload(m1,m3);
 }
 else if(IsGolden==true)
 {
  shoot(m2,m4);
  delay(1000);
  reload(m2,m4);
 }
 Serial3.write('T');
 resetAllFlags();
  


} 



int clockwise()
{
  for(step_iterator=0;step_iterator<revLutions;step_iterator++)
  {
    Serial.println("clockwise");
    myStepper.step(-angle);    
  }
  TZ1State=1;  
}

int anti()
{
  for(step_iterator=0;step_iterator<revLutions;step_iterator++)
  {
    Serial.println("anticlockwise");
    myStepper.step(angle);
  }
  TZ2State=1;
}

void shoot(const byte x,const byte y)
{
  
  digitalWrite(x,HIGH);
  digitalWrite(y,LOW);
 
}
void reload(const byte x,const byte y)
{
  digitalWrite(x,LOW);
  digitalWrite(y,HIGH);
 
}
void standby(const byte x, const byte y)
{
  digitalWrite(x,LOW);
  digitalWrite(y,LOW);
  
}
void resetAllFlags()
{
  IsGreen=false;
  IsMagenta=false;
  IsGolden=false;
}
